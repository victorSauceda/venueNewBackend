# NOTE: update this with your service name
service: pareto-serverless-mongo

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs10.x
  stage: prod
  region: us-west-2
  # profile: enter-name-here
  memorySize: 128
  timeout: 10
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "ses:SendEmail"
      Resource: "*"

functions:
  email:
    handler: email.main
    events:
      - http:
          path: email
          method: post
          cors: true
  createUser:
    handler: users.create
    environment:
      DB: ${ssm:mongo}
    events:
      - http:
          path: users
          method: post
          cors: true
  getOneUser:
    handler: users.getOne
    environment:
      DB: ${ssm:mongo}
    events:
      - http:
          path: users/{id}
          method: get
          cors: true
  getAllUsers:
    handler: users.getAll
    environment:
      DB: ${ssm:mongo}
    events:
      - http:
          path: users
          method: get
          cors: true
  updateUser:
    handler: users.update
    environment:
      DB: ${ssm:mongo}
    events:
      - http:
          path: users/{id}
          method: put
          cors: true
  deleteUser:
    handler: users.delete
    environment:
      DB: ${ssm:mongo}
    events:
      - http:
          path: users/{id}
          method: delete
          cors: true
  billing:
    # Defines an HTTP API endpoint that calls the main function in billing.js
    # - path: url path is /billing
    # - method: POST request
    handler: billing.main
    events:
      - http:
          path: billing
          method: post
          cors: true
  createTransaction:
    handler: transaction.create
    environment:
      DB: ${ssm:mongo}
    events:
      - http:
          path: transaction
          method: post
          cors: true
  getOneTransaction:
    handler: transaction.getOne
    environment:
      DB: ${ssm:mongo}
    events:
      - http:
          path: transaction/{id}
          method: get
          cors: true
  getAllTransaction:
    handler: transaction.getAll
    environment:
      DB: ${ssm:mongo}
    events:
      - http:
          path: transaction
          method: get
          cors: true
  updateTransaction:
    handler: transaction.update
    environment:
      DB: ${ssm:mongo}
    events:
      - http:
          path: transaction/{id}
          method: put
          cors: true
  deleteTransaction:
    handler: transaction.delete
    environment:
      DB: ${ssm:mongo}
    events:
      - http:
          path: transaction/{id}
          method: delete
          cors: true
